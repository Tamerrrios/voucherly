import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  Share,
} from 'react-native';
import LinearGradient from 'react-native-linear-gradient';
import { useNavigation } from '@react-navigation/native';
import LottieView from 'lottie-react-native';
import { useOrder } from '../context/OrderContext';
import { useRoute } from '@react-navigation/native';


const SuccessScreen = () => {
  const navigation = useNavigation();
  const { order, resetOrder } = useOrder();
  const { voucher, receiverPhone } = order || {};
  const route = useRoute();
  const { orderId } = route.params || {};

  const shareLink = orderId ? `https://voucherly.uz/gift?orderId=${orderId}` : '';


  const handleShare = async () => {
    console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è');

    if (!shareLink) {
      console.log('voucherLink –ø—É—Å—Ç–æ–π, –Ω–µ –¥–µ–ª–∏–º—Å—è');
      return;
    }

    try {
      const message = `üéÅ –Ø —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–±–µ –≤–∞—É—á–µ—Ä –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Voucherly!

–û—Ç–∫—Ä–æ–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å: ${shareLink}

–ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏ –µ–≥–æ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üéâ`;

      await Share.share({ message });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è:', error);
    }
  };

  return (
    <LinearGradient colors={["#E53935", "#FF6F61"]} style={styles.container}>
      <View style={styles.animationContainer}>
        <LottieView
          source={require('../../assets/animations/success.json')}
          autoPlay
          loop={false}
          style={styles.lottie}
        />
        <Text style={styles.title}>–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! üéâ</Text>
        <Text style={styles.subtitle}>
          –ü–æ–ª—É—á–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç —Å–≤–æ—é –æ—Ç–∫—Ä—ã—Ç–∫—É –≤–º–µ—Å—Ç–µ —Å –≤–∞—É—á–µ—Ä–æ–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
        </Text>
      </View>

      <View style={styles.buttonsWrapper}>
        <TouchableOpacity style={styles.shareButton} onPress={handleShare}>
          <Text style={styles.buttonText}>üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –æ—Ç–∫—Ä—ã—Ç–∫–æ–π</Text>
        </TouchableOpacity>
        <TouchableOpacity
          style={styles.primaryButton}
          onPress={() => {
            resetOrder(); // –æ—á–∏—â–∞–µ–º –∑–∞–∫–∞–∑
            navigation.navigate('Main');
          }}
        >
          <Text style={[styles.buttonText, { color: '#E53935' }]}>üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π</Text>
        </TouchableOpacity>
      </View>
    </LinearGradient>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'space-between',
  },
  animationContainer: {
    alignItems: 'center',
    marginTop: 60,
  },
  lottie: {
    width: 180,
    height: 180,
  },
  title: {
    fontSize: 24,
    fontWeight: '700',
    color: '#fff',
    marginTop: 20,
    textAlign: 'center',
  },
  subtitle: {
    fontSize: 16,
    color: '#fff',
    textAlign: 'center',
    marginTop: 12,
    paddingHorizontal: 10,
  },
  buttonsWrapper: {
    marginBottom: 40,
    marginHorizontal: 16,
  },
  primaryButton: {
    backgroundColor: '#fff',
    paddingVertical: 14,
    borderRadius: 14,
    alignItems: 'center',
    marginTop: 14,
  },
  shareButton: {
    backgroundColor: 'rgba(255,255,255,0.2)',
    paddingVertical: 14,
    borderRadius: 14,
    alignItems: 'center',
    borderColor: '#fff',
    borderWidth: 1,
  },
  buttonText: {
    fontSize: 16,
    fontWeight: '700',
    color: '#fff',
  },
});

export default SuccessScreen;